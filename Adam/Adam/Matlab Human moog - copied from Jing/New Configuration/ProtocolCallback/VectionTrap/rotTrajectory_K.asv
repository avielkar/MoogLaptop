function [M] = rotTrajectory_K(appHandle)

global debug

if debug
    disp('Entering rotTrajectory_K')
end

data = getappdata(appHandle, 'protinfo');
crossvals = getappdata(appHandle, 'CrossVals');
crossvalsGL = getappdata(appHandle, 'CrossValsGL');
activeStair = data.activeStair;
activeRule = data.activeRule;
trial = getappdata(appHandle, 'trialInfo');
cldata = getappdata(appHandle, 'ControlLoopData'); 

cntr = trial(activeStair,activeRule).list(trial(activeStair,activeRule).cntr);

within = data.condvect.withinStair; 
across = data.condvect.acrossStair;
varying = data.condvect.varying;

%---Jing 12/20/08------
if ~isempty(varying)
    if cldata.staircase
        cntrVarying = cldata.varyingCurrInd;
    else
        cntrVarying = cntr;
    end
end
%----End 12/20/08-------

freq = 60;
i = strmatch('ORIGIN',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Origin',{char(varying.name)},'exact');
    ori(1,:) = [crossvals(cntrVarying,i1) crossvals(cntrVarying,i1) crossvals(cntrVarying,i1)];
    ori(2,:) = [crossvalsGL(cntrVarying,i1) crossvalsGL(cntrVarying,i1) crossvalsGL(cntrVarying,i1)];
elseif data.configinfo(i).status == 3  
    tempVect = across.parameters';
    ori(1,:) = tempVect(activeStair,:);
    ori(2,:) = tempVect(activeStair,:);
elseif data.configinfo(i).status == 4  
    tempVect = within.parameters';
    ori(1,:) = tempVect(cntr,:);
    ori(2,:) = tempVect(cntr,:);
else
    ori(1,:) = data.configinfo(i).parameters;
    ori(2,:) = data.configinfo(i).parameters;
end

i = strmatch('DURATION',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Duration',{char(varying.name)},'exact');
    dur(1,1) = crossvals(cntrVarying,i1);
    dur(2,1) = crossvalsGL(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    dur(1,1) = across.parameters.moog(activeStair);
    dur(2,1) = across.parameters.openGL(activeStair);
elseif data.configinfo(i).status == 4   
    dur(1,1) = within.parameters.moog(cntr);
    dur(2,1) = within.parameters.openGL(cntr);
else
    dur(1,1) = data.configinfo(i).parameters.moog;
    dur(2,1) = data.configinfo(i).parameters.openGL;
end

i = strmatch('RAMP_TIME 1', {char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Ramp Time 1 %',{char(varying.name)},'exact');
    rt1(1,1) = crossvals(cntrVarying,i1);
    rt1(2,1) = crossvalsGL(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    rt1(1,1) = across.parameters.moog(activeStair);
    rt1(2,1) = across.parameters.openGL(activeStair);
elseif data.configinfo(i).status == 4   
    rt1(1,1) = within.parameters.moog(cntr);
    rt1(2,1) = within.parameters.openGL(cntr);
else
    rt1(1,1) = data.configinfo(i).parameters.moog;
    rt1(2,1) = data.configinfo(i).parameters.openGL;
end


i = strmatch('RAMP_TIME 2',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Ramp Time 2 %',{char(varying.name)},'exact');
    rt2(1,1) = crossvals(cntrVarying,i1);
    rt2(2,1) = crossvalsGL(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    rt2(1,1) = across.parameters.moog(activeStair);
    rt2(2,1) = across.parameters.openGL(activeStair);
elseif data.configinfo(i).status == 4   
    rt2(1,1) = within.parameters.moog(cntr);
    rt2(2,1) = within.parameters.openGL(cntr);
else
    rt2(1,1) = data.configinfo(i).parameters.moog;
    rt2(2,1) = data.configinfo(i).parameters.openGL;
end

i = strmatch('VESTIB_DELAY',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Vestibula Delay Time',{char(varying.name)},'exact');
    delt = crossvals(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    delt = across.parameters(activeStair);
elseif data.configinfo(i).status == 4   
    delt = within.parameters(cntr);
else
    delt = data.configinfo(i).parameters;
end

i = strmatch('VESTIB_DURATION',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Vestibula Duration',{char(varying.name)},'exact');
    vesDur = crossvals(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    vesDur = across.parameters(activeStair);
elseif data.configinfo(i).status == 4   
    vesDur = within.parameters(cntr);
else
    vesDur = data.configinfo(i).parameters;
end

i = strmatch('VISTB_VEL',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Vestibula Velocity',{char(varying.name)},'exact');
    vestVel = crossvals(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    vestVel = across.parameters(activeStair);
elseif data.configinfo(i).status == 4   
    vestVel = within.parameters(cntr);
else
    vestVel = data.configinfo(i).parameters;
end

i = strmatch('VISUAL_VEL',{char(data.configinfo.name)},'exact');
if data.configinfo(i).status == 2
    i1 = strmatch('Visual Velocity',{char(varying.name)},'exact');
    visVel = crossvals(cntrVarying,i1);
elseif data.configinfo(i).status == 3   
    visVel = across.parameters(activeStair);
elseif data.configinfo(i).status == 4   
    visVel = within.parameters(cntr);
else
    visVel = data.configinfo(i).parameters;
end

%%%% Creating trajectories
dM = GenTrapezoidVel(vesDur, vestVel, rt1(1,1), rt2(1,1), freq);
dGL = GenTrapezoidVel(dur(2,1), visVel, rt1(2,1), rt2(2,1), freq);

xM(1:length(dGL)) = 0;
yM(1:length(dGL)) = 0;
zM(1:length(dGL)) = 0;
rollM(1:length(dGL)) = 0;
pitchM(1:length(dGL)) = 0;
yawM(1:length(dM)) = dM;   

xGL(1:length(dGL)) = 0;
yGL(1:length(dGL)) = 0;
zGL(1:length(dGL)) = 0;
rollGL(1:length(dGL)) = 1;
pitchGL(1:length(dGL)) = 1;
yawGL(1:length(dGL)) = dGL;



M(1).name = 'LATERAL_DATA';
M(1).data = xM + ori(1,1);
M(2).name = 'SURGE_DATA';
M(2).data = yM + ori(1,2);
M(3).name = 'HEAVE_DATA';
M(3).data = zM + ori(1,3);
M(4).name = 'YAW_DATA';
M(4).data = [zeros(1,delt*freq) yawM ones(1,(dur(2,1)-delt-vesDur)*freq)*yawM(end)];
M(5).name = 'PITCH_DATA';
M(5).data = pitchM;
M(6).name = 'ROLL_DATA';
M(6).data = rollM;
M(7).name = 'GL_LATERAL_DATA';
M(7).data = xGL + ori(2,1);
M(8).name = 'GL_SURGE_DATA';
M(8).data = yGL + ori(2,2);
M(9).name = 'GL_HEAVE_DATA';
M(9).data = zGL + ori(2,3);
M(10).name = 'GL_ROT_ELE';    
M(10).data = rollGL*90;
M(11).name = 'GL_ROT_AZ';  
M(11).data = pitchGL*0;
M(12).name = 'GL_ROT_DATA';   
M(12).data = [0	-0.135049817500247	-0.299440196680441	-0.488829533267137	-0.699518662210542	-0.928355794171101	-1.172655518817776	-1.430129793432882	-1.698829143324435	-1.977092562976536	-2.263504830465458	-2.55686013817995	-2.856131105204717	-3.160442375027439	-3.46904812006629	-3.78131287491492	-4.096695205745305	-4.414733796194357	-4.735035592160467	-5.057265700847386	-5.381138784474585	-5.706411727484166	-6.032877388801493	-6.360359278591149	-6.688707022708074	-7.01779249828644	-7.347506541156157	-7.677756140472104	-8.008462048461826	-8.33955674386552	-8.670982696731429	-9.002690889974284	-9.33463955970286	-9.666793121944716	-9.999121258186497	-10.331598136229337	-10.664201746336468	-10.996913335612911	-11.329716926081552	-11.662598904070869	-11.99554767036205	-12.328553342104867	-12.661607498841839	-12.994702966113937	-13.327833631086719	-13.660994285458814	-13.994180491615644	-14.327388468588769	-14.660614994890127	-14.993857325724182	-15.327113122450408	-15.660380392483399	-15.993657438086132	-16.32694281274045	-16.66023528397349	-16.993533801684826	-17.326837471160292	-17.660145530079067	-17.99345732892305	-18.326772314285137	-18.66009001464741	-18.993410028263753	-19.32673201283556	-19.66005567671508	-19.993380771410486	-20.3267070852	-20.66003443769088	-20.993362675183594	-21.326691666721977	-21.6600213007278	-21.99335148213337	-22.32668212993843	-22.660013175128558	-22.993344558901583	-23.326676231156455	-23.66000814920571	-23.993340276678474	-24.326672582585772	-24.66000504052415	-24.993337627997143	-25.32667032583716	-25.66000311771289	-25.993335989709603	-26.326668929971568	-26.6600019283974	-26.99333497638042	-27.326668066587516	-27.660001192770675	-27.99333434960642	-28.326667532559004	-28.66000073776384	-28.993333961928208	-29.326667202246615	-29.660000456328692	-29.993333722137802	-30.326666997938656	-30.66000028225275	-30.993333573820347	-31.326666871568147	-31.66000017458163	-31.99333348208163	-32.32666679340425	-32.66000010798387	-32.99333342533853	-33.32666674505759	-33.66000006679119	-33.99333339024124	-34.32666671515374	-34.66000004131231	-34.99333336853254	-35.32666669665734	-35.66000002555287	-35.993333355105065	-36.32666668521677	-36.66000001580518	-36.99333334679977	-37.32666667814043	-37.66000000977594	-37.9933333416627	-38.3266666737635	-38.66000000604669	-38.99333333848526	-39.32666667105623	-39.66000000374002	-39.993333336519925	-40.326666669381716	-40.66000000231328	-40.9933333353043	-41.32666666834598	-41.6600000014308	-41.9933333345524	-42.32666666770534	-42.660000000884956	-42.99333333408733	-43.32666666730908	-43.660000000547335	-43.993333333799654	-44.32666666706397	-44.6600000003385	-44.99333333362173	-45.326666666912374	-45.66000000020933	-45.99333333351167	-46.3266666668186	-46.660000000129436	-46.99333333344361	-47.32666666676061	-47.66000000008002	-47.993333333401495	-48.32666666672472	-48.66000000004944	-48.99333333337544	-49.32666666670252	-49.66000000003053	-49.99333333335933	-50.3266666666888	-50.660000000018854	-50.99333333334938	-51.32666666668033	-51.66000000001162	-51.99333333334322	-52.32666666667508	-52.66000000000715	-52.99333333333941	-53.32666666667183	-53.66000000000437	-53.99333333333704	-54.3266666666698	-54.66000000000264	-54.99333333333555	-55.32666666666854	-55.66000000000158	-55.99333333333466	-56.326666666667776	-56.66000000000092	-56.9933333333341	-57.32666666666729	-57.6600000000005	-57.99333333333374	-58.32666666666699	-58.66000000000026	-58.99333333333354	-59.32666666666682	-59.66000000000011	-59.99333333333341	-60.3266666666667	-60.66000000000001	-60.99333333333332	-61.326666666666625	-61.65999999999994	-61.99333333333325	-62.32666666666657	-62.659999999999904	-62.99333333333322	-63.32666666666653	-63.65999999999986	-63.9933333333332	-64.32666666666651	-64.65999999999983	-64.99333333333317	-65.3266666666665	-65.65999999999983	-65.99333333333317	-66.32666666666651	-66.65999999999984	-66.99333333333318	-67.32666666666651	-67.65999999999984	-67.99333333333317	-68.3266666666665	-68.65999999999983	-68.99333333333315	-69.32666666666648	-69.65999999999981	-69.99333333333315	-70.32666666666648	-70.65999999999983	-70.99333333333317	-71.3266666666665	-71.65999999999983	-71.99333333333314	-72.32666666666647	-72.6599999999998	-72.99333333333313	-73.32666666666645	-73.6599999999998	-73.99333333333313	-74.32666666666645	-74.6599999999998	-74.99333333333313	-75.32666666666645	-75.6599999999998	-75.99333333333313	-76.32666666666645	-76.65999999999978	-76.99333333333313	-77.32666666666644	-77.65999999999977	-77.9933333333331	-78.32666666666643	-78.65999999999974	-78.99333333333307	-79.32666666666638	-79.65999999999971	-79.99333333333304	-80.32666666666638	-80.65999999999973	-80.99333333333306	-81.3266666666664	-81.65999999999973	-81.99333333333306	-82.32666666666638	-82.65999999999971	-82.99333333333307	-83.32666666666641	-83.65999999999974	-83.99333333333307	-84.3266666666664	-84.65999999999973	-84.99333333333307	-85.3266666666664	-85.65999999999974	-85.99333333333308	-86.32666666666643	-86.65999999999976	-86.9933333333331	-87.32666666666643	-87.65999999999974 -87.9933333333331	-88.32666666666644	-88.65999999999977	-88.9933333333331	-89.32666666666643	-89.65999999999976	-89.99333333333307	-90.3266666666664	-90.65999999999973	-90.99333333333306	-91.32666666666638	-91.65999999999971	-91.99333333333304	-92.3266666666664	-92.65999999999974	-92.99333333333308	-93.3266666666664	-93.65999999999971	-93.99333333333306	-94.32666666666638	-94.65999999999971	-94.99333333333304	-95.32666666666636	-95.65999999999968	-95.99333333333304	-96.32666666666637	-96.6599999999997	-96.99333333333303	-97.32666666666636	-97.6599999999997	-97.99333333333303	-98.32666666666636	-98.65999999999967	-98.99333333333301	-99.32666666666637	-99.65999999999971	-99.99333333333306	-100.32666666666638	-100.6599999999997	-100.99333333333303	-101.32666666666636	-101.65999999999967	-101.993333333333	-102.32666666666633	-102.65999999999966	-102.99333333333301	-103.32666666666636	-103.6599999999997	-103.99333333333303	-104.32666666666636	-104.65999999999967	-104.993333333333	-105.32666666666633	-105.65999999999966	-105.99333333333298	-106.3266666666663	-106.65999999999966	-106.993333333333	-107.32666666666634	-107.65999999999967	-107.993333333333	-108.32666666666631	-108.65999999999964	-108.99333333333297	-109.3266666666663	-109.65999999999963	-109.99333333333298	-110.32666666666633	-110.65999999999967	-110.993333333333	-111.32666666666633	-111.65999999999968	-111.99333333333298	-112.32666666666631	-112.65999999999967	-112.99333333333298	-113.32666666666633	-113.65999999999966	-113.99333333333297	-114.32666666666631	-114.65999999999964	-114.99333333333297	-115.32666666666628	-115.6599999999996	-115.99333333333294	-116.32666666666627	-116.6599999999996	-116.99333333333293	-117.32666666666627	-117.65999999999961	-117.99333333333296	-118.32666666666628	-118.65999999999961	-118.99333333333293	-119.32666666666624	-119.65999999999958	-119.99333333333291	-120.32666666666623	-120.65999999999957	-120.99333333333294	-121.32666666666628	-121.65999999999963	-121.99333333333294	-122.32666666666626	-122.65999999999957	-122.9933333333329	-123.32666666666624	-123.6599999999996	-123.99333333333294	-124.32666666666628	-124.65999999999961	-124.99333333333293	-125.32666666666624	-125.65999999999958	-125.99333333333293	-126.32666666666624	-126.65999999999957	-126.99333333333293	-127.32666666666627	-127.65999999999958	-127.9933333333329	-128.32666666666626	-128.6599999999996	-128.9933333333329	-129.32666666666623	-129.65999999999954	-129.99333333333288	-130.32666666666623	-130.65999999999957	-130.9933333333329	-131.32666666666623	-131.6599999999996	-131.99333333333294	-132.32666666666628	-132.6599999999996	-132.99333333333294	-133.32666666666626	-133.6599999999996	-133.9933333333329	-134.32666666666623	-134.65999999999954	-134.99333333333286	-135.3266666666662	-135.65999999999954	-135.99333333333288	-136.3266666666662	-136.6599999999995	-136.99333333333283	-137.32666666666617	-137.65999999999948	-137.99333333333286	-138.3266666666662	-138.65999999999954	-138.99333333333288	-139.32666666666623	-139.65999999999957	-139.99333333333288	-140.3266666666662	-140.6599999999995	-140.99333333333286	-141.32666666666617	-141.6599999999995	-141.99333333333283	-142.32666666666617	-142.6599999999995	-142.99333333333286	-143.32666666666617	-143.6599999999995	-143.99333333333283	-144.32666666666617	-144.65999999999948	-144.9933333333328	-145.32666666666614	-145.65999999999948	-145.99333333333286	-146.3266666666662	-146.65999999999954	-146.99333333333286	-147.32666666666617	-147.6599999999995	-147.99333333333286	-148.32666666666617	-148.65999999999948	-148.9933333333328	-149.3266666666661	-149.65999999999946	-149.9933333333328	-150.32666666666614	-150.65999999999948	-150.9933333333328	-151.32666666666614	-151.65999999999946	-151.99333333333277	-152.3266666666661	-152.65999999999946	-152.99333333333283	-153.3266666666662	-153.6599999999995	-153.99333333333286	-154.3266666666662	-154.6599999999995	-154.99333333333283	-155.32666666666614	-155.65999999999946	-155.9933333333328	-156.32666666666614	-156.65999999999948	-156.99333333333283	-157.32666666666614	-157.65999999999948	-157.9933333333328	-158.3266666666661	-158.65999999999943	-158.99333333333277	-159.3266666666661	-159.65999999999948	-159.99333333333283	-160.32666666666617	-160.6599999999995	-160.99333333333286	-161.3266666666662	-161.65999999999954	-161.99333333333288	-162.32666666666626	-162.6599999999996	-162.99333333333297	-163.3266666666663	-163.65999999999966	-163.993333333333	-164.3266666666663	-164.65999999999966	-164.99333333333303	-165.32666666666637	-165.6599999999997	-165.99333333333306	-166.3266666666664	-166.65999999999974	-166.99333333333308	-167.32666666666643	-167.6599999999998	-167.99333333333317	-168.3266666666665	-168.65999999999985	-168.9933333333332	-169.32666666666654	-169.6599999999999	-169.99333333333325	-170.32666666666663	-170.65999999999997	-170.9933333333333	-171.32666666666665	-171.66000000000003	-171.99333333333337	-172.3266666666667	-172.66000000000005	-172.9933333333334	-173.32666666666674	-173.66000000000008	-173.99333333333342	-174.3266666666668	-174.66000000000014	-174.99333333333348	-175.32666666666682	-175.6600000000002	-175.99333333333354	-176.32666666666688	-176.66000000000025	-176.9933333333336	-177.32666666666697	-177.66000000000034	-177.99333333333368	-178.32666666666705	-178.66000000000042	-178.99333333333377	-179.3266666666671	-179.66000000000045	-179.9933333333338	-180.3266666666671	-180.66000000000045	-180.99333333333382	-181.32666666666717	-181.6600000000005	-181.99333333333385	-182.32666666666717	-182.6600000000005	-182.99333333333385	-183.3266666666672	-183.6600000000006	-183.99333333333396	-184.3266666666673	-184.66000000000065	-184.993333333334	-185.32666666666734	-185.6600000000007	-185.99333333333408	-186.32666666666745	-186.6600000000008	-186.99333333333414	-187.3266666666675	-187.66000000000085	-187.9933333333342	-188.32666666666753	-188.66000000000085	-188.9933333333342	-189.32666666666756	-189.66000000000088	-189.99333333333422	-190.3266666666676	-190.66000000000096	-190.99333333333433	-191.32666666666768	-191.66000000000102	-191.9933333333344	-192.32666666666773	-192.6600000000011	-192.99333333333445	-193.3266666666678	-193.66000000000113	-193.99333333333448	-194.32666666666785	-194.6600000000012	-194.99333333333453	-195.32666666666788	-195.66000000000122	-195.99333333333456	-196.3266666666679	-196.66000000000122	-196.99333333333453	-197.32666666666788	-197.66000000000122	-197.9933333333346	-198.32666666666793	-198.6600000000013]

%yawGL;

disp('Vestibular velocity'); vestVel
disp('Exiting rotTrajectory');


